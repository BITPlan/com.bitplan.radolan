<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.bitplan.radolan</groupId>
	<artifactId>com.bitplan.radolan</artifactId>
	<version>0.0.1</version>
	<name>com.bitplan.radolan</name>
	<description>parses the DWD RADOLAN / RADVOR radar composite format - Java port of https://gitlab.cs.fau.de/since/radolan</description>

	<url>https://github.com/BITPlan/com.bitplan.radolan</url>
	<organization>
		<name>BITPlan GmbH</name>
		<url>http://www.bitplan.com</url>
	</organization>
	<scm>
		<url>https://github.com/BITPlan/com.bitplan.radolan</url>
		<developerConnection>Wolfgang Fahl</developerConnection>
	</scm>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/BITPlan/com.bitplan.radolan/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Travis</system>
	</ciManagement>
	<properties>
		<!-- http://stackoverflow.com/questions/3017695/how-to-configure-encoding-in-maven -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- JUnit unit testing framework -->
		<junit4.version>4.12</junit4.version>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<gson.version>2.8.2</gson.version>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io/2.6 -->
		<commons.io.version>2.6</commons.io.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.bitplan.gui</groupId>
			<artifactId>com.bitplan.javafx</artifactId>
			<version>0.0.17</version>
		</dependency>
		<!-- 
		 https://gis.stackexchange.com/questions/130913/geojson-java-library
		 https://github.com/filosganga/geogson  -->
		<dependency>
			<groupId>com.github.filosganga</groupId>
			<artifactId>geogson-core</artifactId>
			<version>1.2.21</version>
		</dependency>
		<!-- JUnit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit4.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- sure-fire (test) plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<excludes>
						<!-- JUnit4 TestSuites -->
						<exclude>**/TestSuite.java</exclude>
						<exclude>**/TestDebug.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- License header handling -->
			<plugin>
				<!-- http://code.mycila.com/license-maven-plugin/ -->
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<header>src/etc/header.txt</header>
					<includes>
						<include>src/**/*.java</include>
					</includes>
					<strictCheck>true</strictCheck>
				</configuration>
			</plugin>

			<!-- create fat jar -->
			<!-- http://stackoverflow.com/a/16222971 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.bitplan.radolan.Radolan</mainClass>
						</manifest>
					</archive>
					<archiveBaseDirectory>${project.basedir}</archiveBaseDirectory>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>assemble-all</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Launch4 J plugin to create cross plattform java app -->
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>1.7.22</version>
				<executions>
					<execution>
						<id>l4j-gui</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<dontWrapJar>false</dontWrapJar>
							<headerType>console</headerType>
							<jar>target/com.bitplan.radolan-${project.version}-jar-with-dependencies.jar</jar>
							<outfile>${project.build.directory}/radolan.exe</outfile>
							<errTitle />
							<cmdLine />
							<chdir />
							<priority>normal</priority>
							<downloadUrl>http://java.com/download</downloadUrl>
							<supportUrl>http://wiki.bitplan.com/index.php/Radolan</supportUrl>
							<customProcName>false</customProcName>
							<stayAlive>false</stayAlive>
							<manifest />
							<icon />
							<jre>
								<path />
								<minVersion>1.8.0</minVersion>
								<maxVersion />
								<jdkPreference>preferJre</jdkPreference>
								<initialHeapSize>256</initialHeapSize>
								<maxHeapSize>3000</maxHeapSize>
							</jre>
							<!-- <splash> <file>${project.basedir}/src/main/build/Sunflower.bmp</file> 
								<waitForWindow>true</waitForWindow> <timeout>60</timeout> <timeoutErr>true</timeoutErr> 
								</splash> -->
							<versionInfo>
								<fileVersion>0.${project.version}</fileVersion>
								<txtFileVersion>${project.version}</txtFileVersion>
								<fileDescription>Radolan</fileDescription>
								<copyright>BITPlan GmbH</copyright>
								<productVersion>0.0.1.0</productVersion>
								<txtProductVersion>${project.version}</txtProductVersion>
								<productName>Radonlan</productName>
								<companyName>BITPlan GmbH</companyName>
								<internalName>radolan</internalName>
								<originalFilename>radolan.exe</originalFilename>
							</versionInfo>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- http://kosalads.blogspot.de/2013/04/maven-copy-artifact-in-to-separate.html 
				https://stackoverflow.com/a/16862404/1497139 -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<configuration>
					<tasks>
						<copy
							file="target/com.bitplan.radolan-${project.version}-jar-with-dependencies.jar"
							tofile="release/radolan.jar" />
						<copy file="target/radolan.exe" tofile="release/radolan.exe" />
					</tasks>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
